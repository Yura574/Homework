{"version":3,"sources":["p2-homeworks/h5-rrd-v6/header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","pencel.svg","arrow-right.svg","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/Junior_plus.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SuperInputText","props","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","SuperButton","red","finalClassName","btn","SuperCheckbox","onChangeChecked","children","testOnChange","checkbox","checked","HW4","useState","text","setText","showAlert","alert","setChecked","isDone","classes","column","classes2","inputClass","onClick","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","SuperInputTextClass","src","pencil","alt","SuperEditableSpanClass","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","console","log","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","SuperRadio","name","map","o","i","arr","HW7","Junior","Junior_plus","PATH","Pages","path","element","to","Header","header","isActive","active","link","arrow","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bcfe67a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"header_link__8Qu7d\",\"active\":\"header_active__3Vrag\",\"block\":\"header_block__1extv\",\"header\":\"header_header__1Np4w\",\"arrow\":\"header_arrow__2PoUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2zH2t\",\"error\":\"SuperInputText_error__KpfFr\",\"inputClass\":\"SuperInputText_inputClass__1uUqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuperEditableSpan\":\"SuperEditableSpan_SuperEditableSpan__2PsXo\",\"pencil\":\"SuperEditableSpan_pencil__2HHkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3DYiv\",\"spanClassName\":\"SuperCheckbox_spanClassName__3WFwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2zVkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__21K8y\",\"column\":\"HW4_column__2Hk2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2xfAX\",\"red\":\"SuperButton_red__3fGX_\",\"btn\":\"SuperButton_btn__qFhQz\",\"rotate\":\"SuperButton_rotate__1gkJN\"};","module.exports = __webpack_public_path__ + \"static/media/pencel.3e613d2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right.789e151b.svg\";","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (props) => {\r\n    const   {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    } = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${ s.btn } ${className}`;\r\n\r\n    return (\r\n            <button\r\n                className={finalClassName}\r\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n            />\r\n\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (isDone: boolean) => void\r\n    spanClassName?: string\r\n    testOnChange?: (isDone: boolean) => void\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        testOnChange,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(onChangeChecked){\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {  useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport classes from \"./HW4.module.css\";\r\nimport classes2 from \"./common/c1-SuperInputText/SuperInputText.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText('')\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(true);\r\n    const testOnChange = (isDone:boolean) =>{\r\n               setChecked(isDone)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={classes.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={classes2.inputClass} // проверьте, рабоет ли смешивание классов\r\n\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                  delete  {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={testOnChange}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChangeChecked={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperInputTextClass from './../../../h4/common/c1-SuperInputText/SuperInputText.module.css'\r\nimport pencil from './../../../../pencel.svg'\r\nimport SuperEditableSpanClass from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (props) => {\r\n    const {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    } = props\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode(); // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${restProps.className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        className={SuperInputTextClass.inputClass}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={restProps.spanClassName}\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {restProps.value\r\n                            ? restProps.value\r\n                            : <span><img src={pencil} alt=\"\"\r\n                                         className={SuperEditableSpanClass.pencil}/>{children || restProps.value}</span>\r\n                        }\r\n\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\nconsole.log(state)\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\nimport SuperEditableSpanClass from './common/c4-SuperEditableSpan/SuperEditableSpan.module.css'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\", 'hello! enter text!'))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : `enter text...`}}\r\n                    // className={SuperEditableSpanClass.SuperEditableSpan}\r\n                    spanClassName={SuperEditableSpanClass.SuperEditableSpan}\r\n                />\r\n\r\n            </div>\r\n\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            <HW4/>\n            {/*<HW5/>*/}\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\n\r\nexport const Junior = () => {\r\n    return <div>\r\n        <HW7/>\r\n    </div>\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Junior_plus = () => {\r\n    return <div>Junior</div>\r\n}","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Navigate, Route, Routes } from 'react-router-dom';\nimport {Junior} from \"./pages/Junior\";\nimport {Junior_plus} from \"./pages/Junior_plus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior+'\n    // add paths\n}\n\nfunction Pages() {\n\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.PRE_JUNIOR} element={<Junior_plus/>}/>\n                // add routes\n\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {PATH} from \"./Pages\";\nimport s from './header.module.css'\nimport arrow from './../../arrow-right.svg'\n\n\nfunction Header() {\n    return (\n        <div className={s.header} >\n            <NavLink to={PATH.PRE_JUNIOR}  className={({isActive}) => isActive ? s.active : s.link} >Pre-Junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={({isActive}) => isActive ? s.active : s.link} >Junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={({isActive}) => isActive ? s.active : s.link}  >Junior+</NavLink>\n            <div className={s.arrow}><img src={arrow} alt=\"\"/></div>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}